geom_line() +
# scale_x_discrete(aes(breaks=as.character(yr_month)), labels = month_yr) +
theme_bw() +
ylim(0,3e6) +
theme(axis.text.x = element_text(angle=90, vjust=.5))
pa_ma13[,list(STATE.TOTAL, trump_medicaid, clinton_medicaid)]
1332091          +1497569
1325491          +1488682
pa_ma13
ggplot() +
geom_line(data = pa_ma13, aes(x=as.character(year_mo), y = clinton_medicaid, group = 1), col='blue') +
geom_line(data = pa_ma13, aes(x=as.character(year_mo), y = trump_medicaid, group = 1), col='red') +
geom_vline(data = pa_ma13, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = pa_ma13$month_yr)
pa_ma13
ggplot() +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = clinton_medicaid, group = 1), col='blue') +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = trump_medicaid, group = 1), col='red')
fit_sq_auto_total = gls(STATE.TOTAL ~ level + time + trend + trend_sq,
data = pa_ma13,
correlation=corARMA(q=7, form = ~time),
method = 'ML')
fit_sq_auto_total
summary(fit_sq_auto_total)
ls
ls()
list.files()
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv")) # bring in county population
county_pop
head(county_pop,1)
county_pop[,GEO.display.label]
strsplit(x = county_pop[,GEO.display.label], split = " ")
strsplit(x = county_pop$GEO.display.label, split = " ")
county_pop$GEO.display.label
strsplit(x = as.character(county_pop$GEO.display.label), split = " ")
strsplit(x = as.character(county_pop$GEO.display.label), split = " ")[1]
strsplit(x = as.character(county_pop$GEO.display.label), split = " ")[1:length(county_pop$GEO.display.label)]
strsplit(x = as.character(county_pop$GEO.display.label), split = " ")[1:length(county_pop$GEO.display.label)][[1]]
county_pop[,as.character(GEO.display.label)]
county_pop[,strsplit(as.character(GEO.display.label))]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2,]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][1,]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][[1,]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[1]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[1]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[2]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[2:3]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2:3][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2:3][[1]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2:3][[1]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][[1]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][[1]]
votes = setDT(read.csv('pa_cty_election_res.csv')) # read in county votes data
trump = votes[TRUMP > CLINTON, COUNTY] # subset county votes to trump winners
pa_ma13[,trump_medicaid := rowSums(pa_ma13[,!which(names(pa_ma13) %in% trump), with=FALSE])] # Sum county medicaid popoulation where Trump won
pa_ma13[,clinton_medicaid := STATE.TOTAL - trump_medicaid] # Hillary wins  = state total - Trump medicaid
# plot trump vs hillary
ggplot() +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = clinton_medicaid, group = 1), col='blue') +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = trump_medicaid, group = 1), col='red') +
geom_vline(data = pa_ma13, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = pa_ma13$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance ",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion")
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][[1]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[2][[1]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[2]][[1]]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[2]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[4]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[60]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[1:x]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[1:60]][1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[1]]
county_pop[,strsplit(as.character(GEO.display.label), split = " ")[[1]][1]]
county_pop[,lapply(as.character(GEO.display.label), strsplit, split = " ")]
county_pop[,lapply(as.character(GEO.display.label), strsplit, split = " ")[1]]
county_pop[,lapply(as.character(GEO.display.label), strsplit, split = " ")[[1]]]
unlist(strsplit(as.character(county_pop$GEO.display.label), split = " "))
list(strsplit(as.character(county_pop$GEO.display.label), split = " "))
sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)]
county_pop
county_pop
pa_ma13
names(county_pop)
t(county_pop[,list(county_name, respop72010, respop72011, respop72012, respop72013, respop72014, respop72015, respop72016)])
trump
county_pop[county_name %in% trump]
county_pop[county_name %in% trump,colSums(list(respop72010,respop72011,respop72012,respop72013,respop72014,respop72015,respop72016))]
colSums(county_pop[county_name %in% trump,list(respop72010,respop72011,respop72012,respop72013,respop72014,respop72015,respop72016)])
county_pop[county_name %in% trump,list(respop72010,respop72011,respop72012,respop72013,respop72014,respop72015,respop72016)]
county_pop[colSums(county_name %in% trump,list(respop72010,respop72011,respop72012,respop72013,respop72014,respop72015,respop72016))]
?colSums
county_pop[colSums(county_name %in% trump,colSums(respop72010)]
county_pop[county_name %in% trump,colSums(respop72010)]
county_pop[county_name %in% trump,rowSums(respop72010)]
colSums(county_pop$respop72010)
rowSums(county_pop$respop72010)
county_pop$respop72010
county_pop[1,,with=FALSE]
county_pop[1,]
county_pop[-1,]
county_pop = county_pop[-1,]
dim(county_pop)
county_pop[,colSums(respop72010,respop72012)]
str(county_pop)
nums = c(respop72010,respop72011,respop72012,respop72013,respop72014,respop72015,respop72016)
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
str(county_pop)
head(county_pop)
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv")) # bring in county population
county_pop
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv", stringsAsFactors = FALSE)) # bring in county population
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)] # get county names
county_pop = county_pop[-1,]
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
county_pop
trump
county_pop = county_pop[,county_name %in% trump]
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv", stringsAsFactors = FALSE)) # bring in county population
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)] # get county names
county_pop = county_pop[-1,]
# Population estimates by year
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
county_pop = county_pop[,county_name %in% trump]
## county population data 2010-2016
# https://factfinder.census.gov/faces/tableservices/jsf/pages/productview.xhtml?src=bkmk
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv", stringsAsFactors = FALSE)) # bring in county population
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)] # get county names
county_pop = county_pop[-1,]
# Population estimates by year
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
county_pop = county_pop[,county_name %in% trump]
county_pop
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv", stringsAsFactors = FALSE)) # bring in county population
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)] # get county names
county_pop = county_pop[-1,]
# Population estimates by year
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
county_pop = county_pop[,which(county_name %in% trump)]
county_pop
## county population data 2010-2016
# https://factfinder.census.gov/faces/tableservices/jsf/pages/productview.xhtml?src=bkmk
county_pop = setDT(read.csv("PEP_2016_PEPANNRES.csv", stringsAsFactors = FALSE)) # bring in county population
county_pop[,county_name := sapply(strsplit(as.character(county_pop$GEO.display.label), split = " "), '[', 1)] # get county names
county_pop = county_pop[-1,]
# Population estimates by year
nums = c('respop72010','respop72011','respop72012','respop72013','respop72014','respop72015','respop72016')
county_pop[,c(nums) := lapply(.SD, as.numeric), .SDcols = nums]
county_pop = county_pop[,which(county_name %in% trump), with=FALSE]
county_pop
county_pop[,colSums(num)]
county_pop[,colSums(get(nums))]
county_pop[,nums]
county_pop[,lapply(nums, colSums)]
county_pop[,lapply(nums, colSums), .SDcols = nums]
str(county_pop)
county_pop[,colSums(nums), .SDcols = nums]
colSums(county_pop$respop72011)
rowSums(county_pop$respop72011)
sum(county_pop$respop72011)
county_pop[,sum(respop72011), by = county_name]
pa_ma13
county_pop
county_pop[county_name %in% trump]
dim(county_pop)
dim(county_pop[county_name %in% trump])
county_pop[!county_name %in% trump]
pop_trump = county_pop[county_name %in% trump]
pop_clinton = county_pop[!county_name %in% trump]
rowSums(pop_clinton)
str(pop_clinton)
t(pop_clinton)
data.frame(t(pop_clinton))
pa_ma13
pop_clinton
names(pop_clinton)
pop_clinton[,nums]
pop_clinton[,nums, with = FALSE]
colSums(pop_clinton[,nums, with = FALSE])
t(colSums(pop_clinton[,nums, with = FALSE]))
data.frame(colSums(pop_clinton[,nums, with = FALSE]))
pop_clinton = data.frame(colSums(pop_clinton[,nums, with = FALSE]))
str(pop_clinton)
rownames(pop_clinton)
substr(rownames(pop_clinton),7,4)
substr(rownames(pop_clinton[1]),7,4)
substr(rownames(pop_clinton)[1],8,4)
rownames(pop_clinton)[1]
substr(rownames(pop_clinton)[1],1,4)
substr(rownames(pop_clinton)[1],5,4)
substr(rownames(pop_clinton)[1],4,4)
substr(as.character(rownames(pop_clinton)[1]),4,4)
substr(as.character(rownames(pop_clinton)[1]),6,4)
str(pa_ma13[,year])
pop_clinton[,year := seq(2010:2016,1)]
pop_clinton
pop_clinton[,year := c(2010,2011,2012,2013,2014,2015,2016)]
pop_clinton[,year := rownames(pop_clinton)]
rownames(pop_clinton)
str(pop_clinton)
pop_clinton$year = c(2010,2011,2012,2013,2014,2015,2016)
pop_clinton
rownames(pop_clinton) = NULL
pop_trump = data.frame(colSums(pop_trump[,nums, with = FALSE]))
pop_trump$year = c(2010,2011,2012,2013,2014,2015,2016)
rownames(pop_trump) = NULL
pop_clinton
pop_trump
names(pop_clinton)[1]
county_pop[,colSums(nums), .SDcols = nums]
merge(pa_ma13, pop_trump, by = 'year')
names(pop_trump)[1] = 'pop_trump' # county total population for trump
pop_trump
pop_clinton
names(pop_clinton)[1] = 'pop_clinton' # county total population for clinton
names(pop_trump)[1] = 'pop_trump' # county total population for trump
merge(pa_ma13, pop_trump, by = 'year')
str(merge(pa_ma13, pop_trump, by = 'year'))
pa_ma13 = merge(pa_ma13, pop_trump, by = 'year', all.x = TRUE)
pa_ma13 = merge(pa_ma13, pop_clinton, by = 'year', all.x = TRUE)
dim(pa_ma13)
pa_ma13[,year_mo]
str(pa_ma13)
pa_ma13[,yr_month]
pa_ma13
pa_ma13[,':='(clinton_ma_rate = clinton_medicaid / clinton_pop,
trump_ma_rate = trump_medicaid / clinton_pop)]
pa_ma13[,':='(clinton_ma_rate = clinton_medicaid / pop_clinton,
trump_ma_rate = trump_medicaid / pop_trump)]
pa_ma13
ggplot() +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = clinton_ma_rate, group = 1), col='blue') +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = trump_ma_rate, group = 1), col='red') +
geom_vline(data = pa_ma13, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = pa_ma13$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1))
ggplot() +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = clinton_ma_rate, group = 1), col='blue') +
geom_line(data = pa_ma13, aes(x=as.character(yr_month), y = trump_ma_rate, group = 1), col='red') +
geom_vline(data = pa_ma13, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = pa_ma13$month_yr)
pa_ma13
pa_ma13[,list(yr_month, time, trend, level, trend_sq, clinton_ma_rate)]
pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump_ma_rate)]
ma_clinton = pa_ma13[,list(yr_month, time, trend, level, trend_sq, clinton_ma_rate)]
ma_trump = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump_ma_rate)]
ma_clinton
names(ma_trump) == names(ma_clinton)
pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 1, ma_rate = clinton_ma_rate)]
ma_clinton = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 1, ma_rate = clinton_ma_rate)]
ma_trump = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 0, ma_rate = trump_ma_rate)]
names(ma_trump) == names(ma_clinton)
ma_clinton = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 1, ma_rate = clinton_ma_rate)]
ma_trump = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 0, ma_rate = trump_ma_rate)]
str(rbind(ma_clinton, ma_trump))
ma_append = rbind(ma_clinton, ma_trump)
ma_append
ma_append[,':='(trump_time = trump * time,
trump_level = trump * level,
trump_trend = trump * trend)]
ma_append
trump_fit_lin = lm(ma_rate ~ time + trump + trump_time + level + trend + trump_level + trump_trend,
data = ma_append)
summary(trump_fit_lin)
pa_mat13
pa_ma13
ma_append[,ma_rate = ma_rate * 1000]
ma_append[,ma_rate := ma_rate * 1000]
ma_append
trump_fit_lin = lm(ma_rate ~ time + trump + trump_time + level + trend + trump_level + trump_trend,
data = ma_append)
summary(trump_fit_lin)
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = 1, color = trump)) +
geom_vline(data = pa_ma13, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = ma_append$month_yr)
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = 1, color = trump)) +
geom_line()
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = trump, color = trump)) +
geom_line()
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line()
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250))
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme_bw()
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion - Trump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 250)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(0, 250)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 300)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(0, 300)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 300)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
names(ma_append)
ma_append[,trump_trend_sq = trump * trend_sq]
ma_append[,trump_trend_sq := trump * trend_sq]
trump_fit_sq = lm(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append)
summary(trump_fit_sq)
ma_clinton = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 0, ma_rate = clinton_ma_rate)] # clinton dataset
ma_trump = pa_ma13[,list(yr_month, time, trend, level, trend_sq, trump = 1, ma_rate = trump_ma_rate)] # trump dataset
ma_append = rbind(ma_clinton, ma_trump) # bind clinton & trump
ma_append[,':='(trump_time = trump * time,
trump_level = trump * level,
trump_trend = trump * trend,
trump_trend_sq = trump * trend_sq,
ma_rate = ma_rate * 1000)] # rate per 1,000
# plot trump vs hillary
ggplot(data = ma_append, aes(x=as.character(yr_month), y = ma_rate, group = as.character(trump), color = as.character(trump))) +
geom_line() +
geom_vline(data = ma_append, aes(xintercept = which(levels(as.factor(yr_month)) %in% '201501')), linetype=2, col = 'blue')+
theme_bw() +
scale_x_discrete(labels = ma_append$month_yr) +
scale_y_continuous(labels = scales::comma, limits = c(100, 300)) +
theme(axis.text.x = element_text(angle=90, vjust= .5, hjust = 1)) +
labs(x = "Month & Year",
y = "Population per 1,000 on medical assistance",
title = "Medicaid Enrollees in Pennsylvania:\nBefore & After Medicaid Expansion\nTrump vs Clinton")
trump_fit_lin = lm(ma_rate ~ time + trump + trump_time + level + trend + trump_level + trump_trend,
data = ma_append)
summary(trump_fit_lin)
trump_fit_sq = lm(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append)
summary(trump_fit_sq)
anova(trump_fit_lin, trump_fit_sq)
plot(trump_fit_sq)
ma_append[c(25, 48, 73)]
plot(resid(trump_fit_sq))
acf(resid(trump_fit_sq))
acf(resid(trump_fit_sq), type = 'partial')
durbinWatsonTest(trump_fit_sq, alternative = 'two.sided')
durbinWatsonTest(trump_fit_sq, alternative = 'two.sided', max.lag = 36)
acf(resid(trump_fit_sq))
acf(resid(trump_fit_sq), type = 'partial') #
anova(fit_sq_auto, fit_sq_auto1, fit_sq_auto2) # significant differences b/n the 3 models
acf(resid(fit_sq)) # ACF: exponential decay, lags at 1 & 7
acf(resid(fit_sq), type = 'partial') # PACF: no significant lag
acf(resid(fit_sq)) # ACF: exponential decay, lags at 1 & 7
fit_sq_auto3 = gls(ma_state_rate ~ level + time + trend + trend_sq,
data = pa_ma13,
correlation=corARMA(q=2, form = ~time),
method = 'ML')
summary(fit_sq_auto3)
anova(fit_sq_auto, fit_sq_auto1, fit_sq_auto2, fit_sq_auto3) # significant differences b/n the 3 models
summary(fit_sq_auto3)
summary(fit_sq_auto2)
summary(fit_sq_auto3)
anova(fit_sq_auto3,fit_sq_auto2)
fit_sq_auto3 = gls(ma_state_rate ~ level + time + trend + trend_sq,
data = pa_ma13,
correlation=corARMA(q=1, form = ~time),
method = 'ML')
anova(fit_sq_auto, fit_sq_auto1, fit_sq_auto2, fit_sq_auto3) # significant differences b/n the 3 models
acf(resid(trump_fit_sq)) # ACF: exponential decay, max 7
acf(resid(trump_fit_sq), type = 'partial') # PACF: no exponential decay
acf(resid(trump_fit_sq)) # ACF: exponential decay, max 7
acf(resid(trump_fit_sq), type = 'partial') # PACF: no exponential decay
trump_sq_auto = gls(ma_rate ~ ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
# correlation=corARMA(p=1, form = ~time),
method = 'ML')
trump_sq_auto1 = gls(ma_rate ~ ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(p=7, form = ~trump|time),
method = 'ML')
class(ma_apend)
class(ma_append)
class(ma_pa13)
class(pa_ma13)
trump_sq_auto1 = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(form = ~trump|time),
method = 'ML')
trump_sq_auto = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(form = ~time|trump),
method = 'ML')
trump_sq_auto = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(p=0, q=0, form = ~time|trump),
method = 'ML')
acf(fit_sq_auto2)
ACF(fit_sq_auto2)
plot(ACF(fit_sq_auto2))
trump_sq_auto = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(q=7, form = ~time|trump),
method = 'ML')
summary(trump_sq_auto)
trump_sq_auto1 = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(p=2, form = ~time|trump),
method = 'ML')
summary(trump_sq_auto1)
anova(trump_sq_auto,trump_sq_auto1)
acf(resid(trump_fit_sq)) # ACF: exponential decay, max 7
acf(resid(trump_fit_sq), type = 'partial') # PACF: no exponential decay
acf(resid(trump_fit_sq)) # ACF: exponential decay, max 7
acf(resid(trump_fit_sq), type = 'partial') # PACF: no exponential decay
trump_sq_auto2 = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(p=1,q=1, form = ~time|trump),
method = 'ML')
summary(trump_sq_auto2)
anova(trump_sq_auto1,trump_sq_auto2 )
trump_sq_auto1 = gls(ma_rate ~ time + level + trend + trend_sq + trump + trump_time + trump_level + trump_trend + trump_trend_sq,
data = ma_append,
correlation=corARMA(p=2, q=1, form = ~time|trump),
method = 'ML')
anova(trump_sq_auto1,trump_sq_auto2 )
summary(trump_sq_auto1)
summary(trump_sq_auto2)
summary(trump_sq_auto2)
anova(trump_sq_auto1, trump_sq_auto2)
fitted(trump_sq_auto2)
cbind(ma_append,fitted(trump_sq_auto2))
ma_fitted = cbind(ma_append,fitted = fitted(trump_sq_auto2))
str(ma_fitted)
ma_fitted = cbind(ma_append,fitted = as.numeric(fitted(trump_sq_auto2)))
str(ma_fitted)
ma_fitted = cbind(ma_append,fitted = fitted(trump_sq_auto2))
ma_fitted = cbind(ma_append,fit = fitted(trump_sq_auto2))
ma_fitted[trump==1, list(yr_month, fit)]
